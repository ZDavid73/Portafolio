---
interface Props {
  images: string[];
  index: number;
}

const { images, index } = Astro.props;
const delay = index * 100;
---

<div class="pokemon-card" data-aos="fade-up" data-aos-delay={delay}>
  <div class="pokemon-card-content">
    <div class="image-slideshow h-full w-full overflow-hidden">
      {images.map((image) => (
        <img src={image} alt="" class="w-full h-full object-cover" loading="lazy" />
      ))}
    </div>
  </div>
</div>

<style>
  .image-slideshow {
    position: relative;
  }

  .image-slideshow img {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    transition: opacity 1s ease-in-out;
    animation: fadeInOut 8s infinite;
  }

  .image-slideshow img:nth-child(1) {
    position: relative;
    animation-delay: 0s;
  }

  .image-slideshow img:nth-child(2) {
    animation-delay: 4s;
  }

  @keyframes fadeInOut {
    0%, 45%, 100% { opacity: 0; }
    5%, 40% { opacity: 1; }
  }

  .pokemon-card {
    width: 223.77px;
    height: 305.435px;
    @apply rounded-[5px] shadow-xl overflow-hidden 
           transition-all duration-300 transform hover:scale-105;
    transform-style: preserve-3d;
    animation: float 6s ease-in-out infinite;
  }

  @media (max-width: 768px) {
    .pokemon-card {
      width: 167.83px;
      height: 229.08px;
    }
  }

  .pokemon-card:hover {
    animation: tilt 0.5s ease-in-out forwards;
  }

  .pokemon-card-content {
    @apply h-full w-full rounded-[5px] overflow-hidden;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
  }

  @keyframes tilt {
    0% { transform: rotateY(0); }
    100% { transform: rotateY(10deg); }
  }
</style>